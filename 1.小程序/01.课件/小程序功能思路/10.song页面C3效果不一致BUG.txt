问题:当用户开始播放歌曲之后,离开song页面,再次进入该页面,背景音频播放状态和页面C3效果不一致
原因:这是因为当离开song页面的时候,会触发该页面的卸载操作,导致song页面状态丢失,再次进入该页面会重新挂载当前页面

需求:当用户进入song页面时,如果当前正在播放的背景音频和当前页面展示的是同一首歌,自动将页面C3效果动起来
拆解:
	1.当用户进入song页面时
		生命周期监视
			选择onLoad

	2.如果当前正在播放的背景音频和当前页面展示的是同一首歌
		继续拆解:
			1.如何知道当前背景音频是否正在播放?
				当用户点击播放按钮的时候,我们就可以知道当前背景音频的播放状态
				由于当前song页面离开时候isPlay丢失了,所以没法分辨背景音频播放状态
					问题:如何将isPlay数据进行缓存,防止丢失
						Vue:
							1.localStorage
								由于是硬盘级操作,所以速度较慢,性能较低
								存储大小只有5MB
								数据不会丢失
							2.Vuex
								由于是内存级操作,所以速度很快,性能较高
								数据断电丢失
						小程序:
							1.Storage
								只会存储重要数据
							2.app实例对象
								无论哪个页面销毁,都不会受到影响的存储数据的位置
								通过getApp()可以获得全局唯一的小程序实例对象,也就是全局可见
									读取属性:与普通对象相同
									修改属性:与普通对象相同
									命名规则:与普通对象相同
									总结:他就是普通对象,而且没有响应式效果
								

			2.如何知道当前背景音频是哪一首歌?
				当用户点击播放按钮的时候,我们就可以知道当前背景音频播的是哪一首歌
				与问题一相同,存储数据丢失,需要找个地方缓存数据
					问题:如何将当前歌曲id数据进行缓存,防止丢失
				
			3.如何知道当前页面是哪一首歌?
				从进入song页面开始就可以得到当前页面歌曲的id
			4.如何知道两首歌是否是同一首歌?
				通过比较两首歌曲的id就能知道是否是同一首歌

	3.自动将页面C3效果动起来
		使用js控制data状态的isPlay,实现页面C3效果动起来
		